{"version":3,"sources":["func/getRandomQuote.js","components/Button/Button.jsx","components/QuoteContainer/QuoteContainer.jsx","App.js","index.js"],"names":["getRandomQuote","data","index","find","q","i","Button","name","onClick","children","QuoteContainer","author","quote","onButtonClick","onButtonRefreshClick","onButtonPrevClick","onButtonNextClick","type","prototypes","PropTypes","string","func","node","getRandomNum","min","max","Math","floor","random","App","useQuery","a","axios","get","then","resp","retry","staleTime","isLoading","isError","error","isSuccess","useState","setQuote","useEffect","randomNum","length","message","actQuote","indexOf","queryClient","QueryClient","ReactDOM","render","StrictMode","client","initialOpen","document","getElementById"],"mappings":"qSAAaA,G,MAAiB,SAACC,EAAMC,GAInC,OAHcD,EAAKE,MAAK,SAACC,EAAGC,GAAO,IAAD,EAChC,iBAAOA,IAAMH,SAAb,QAAsBE,O,gECAX,SAASE,EAAT,GAAuD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,SAAqB,iBACnE,OACE,wBAAQF,KAAMA,EAAMC,QAASA,EAA7B,SACGC,ICHQ,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,OACAC,EAEC,EAFDA,MAEC,IADDC,cAAiBC,EAChB,EADgBA,qBAAsBC,EACtC,EADsCA,kBAAmBC,EACzD,EADyDA,kBAE1D,OACE,gCACG,IACD,uCAAUL,KACV,wCAAWC,KACX,cAACN,EAAD,CAAQC,KAAK,OAAOU,KAAK,SAAST,QAASO,EAA3C,kBAGA,cAACT,EAAD,CAAQC,KAAK,UAAUU,KAAK,SAAST,QAASM,EAA9C,qBAGA,cAACR,EAAD,CAAQC,KAAK,OAAOU,KAAK,SAAST,QAASQ,EAA3C,qBDRNV,EAAOY,WAAa,CAClBX,KAAMY,IAAUC,OAChBZ,QAASW,IAAUE,KACnBZ,SAAUU,IAAUG,MELtB,IAAMC,EAAe,SAACC,EAAKC,GACzB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,IAiFnCK,MA9Ef,WACE,MAAuDC,mBACrD,SAD6D,sBAE7D,sBAAAC,EAAA,sEACQC,IACHC,IADG,2IAKHC,MAAK,SAACC,GAAD,OAAUA,EAAKlC,QANzB,mFAOA,CACEmC,OAAO,EACPC,UAAW,OAXPpC,EAAR,EAAQA,KAAMqC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,UAezC,EAA0BC,mBAAS,MAAnC,mBAAO9B,EAAP,KAAc+B,EAAd,KAkCA,OAhCAC,qBAAU,WACR,GAAK3C,EAAL,CAGA,IAAM4C,EAAYtB,EAAa,EAAGtB,EAAK6C,OAAS,GAChDH,EAAS3C,EAAeC,EAAM4C,OAC7B,CAAC5C,IA0BAqC,EACK,mDAGLC,EACK,4BAAIC,EAAMO,UAGfN,EAEA,iCACE,kDACC7B,GACC,cAACF,EAAD,CACEC,OAAQC,EAAMD,OACdC,MAAOA,EAAMA,MACbC,cAAe,CACbC,qBAzCiB,WAC3B,IAAM+B,EAAYtB,EAAa,EAAGtB,EAAK6C,OAAS,GAChDH,EAAS3C,EAAeC,EAAM4C,KAwCpB9B,kBArCc,WACxB,IAAMiC,EAAW/C,EAAKE,MAAK,SAACC,GAAD,OAAOA,EAAEQ,QAAUA,EAAMA,SACrB,IAA3BX,EAAKgD,QAAQD,GAIjBL,EAAS1C,EAAKA,EAAKgD,QAAQD,GAAY,IAHrCL,EAAS1C,EAAKA,EAAK6C,OAAS,KAmCpB9B,kBA7Bc,WACxB,IAAMgC,EAAW/C,EAAKE,MAAK,SAACC,GAAD,OAAOA,EAAEQ,QAAUA,EAAMA,SAEhDX,EAAKgD,QAAQD,KAAc/C,EAAK6C,OAAS,EAI7CH,EAAS1C,EAAKA,EAAKgD,QAAQD,GAAY,IAHrCL,EAAS1C,EAAK,gBAclB,GC9DIiD,EAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,sBAAD,CAAqBC,OAAQL,EAA7B,UACE,cAAC,EAAD,IACA,cAAC,qBAAD,CAAoBM,aAAa,SAGrCC,SAASC,eAAe,W","file":"static/js/main.c8b86faa.chunk.js","sourcesContent":["export const getRandomQuote = (data, index) => {\r\n  const quote = data.find((q, i) => {\r\n    return i === index ?? q;\r\n  });\r\n  return quote;\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Button({ name, onClick, children, ...args }) {\r\n  return (\r\n    <button name={name} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.prototypes = {\r\n  name: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n","import Button from \"../Button\";\r\n\r\nexport default function QuoteContainer({\r\n  author,\r\n  quote,\r\n  onButtonClick: { onButtonRefreshClick, onButtonPrevClick, onButtonNextClick },\r\n}) {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <p>Name: {author}</p>\r\n      <p>Quote: {quote}</p>\r\n      <Button name=\"prev\" type=\"button\" onClick={onButtonPrevClick}>\r\n        Prev\r\n      </Button>\r\n      <Button name=\"refresh\" type=\"button\" onClick={onButtonRefreshClick}>\r\n        Refresh\r\n      </Button>\r\n      <Button name=\"next\" type=\"button\" onClick={onButtonNextClick}>\r\n        Next\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nimport \"./App.css\";\nimport { getRandomQuote } from \"./func/getRandomQuote\";\nimport QuoteContainer from \"./components/QuoteContainer\";\n\nconst getRandomNum = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nfunction App() {\n  const { data, isLoading, isError, error, isSuccess } = useQuery(\n    \"quotes\",\n    async () =>\n      await axios\n        .get(\n          `https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd59\n61f026264bb6bb3a6c41671b044f1f4/quotes.json`\n        )\n        .then((resp) => resp.data),\n    {\n      retry: false,\n      staleTime: 1000 * 60 * 60,\n    }\n  );\n\n  const [quote, setQuote] = useState(null);\n\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n    const randomNum = getRandomNum(0, data.length - 1);\n    setQuote(getRandomQuote(data, randomNum));\n  }, [data]);\n\n  const onButtonRefreshClick = () => {\n    const randomNum = getRandomNum(0, data.length - 1);\n    setQuote(getRandomQuote(data, randomNum));\n  };\n\n  const onButtonPrevClick = () => {\n    const actQuote = data.find((q) => q.quote === quote.quote);\n    if (data.indexOf(actQuote) === 0) {\n      setQuote(data[data.length - 1]);\n      return;\n    }\n    setQuote(data[data.indexOf(actQuote) - 1]);\n  };\n\n  const onButtonNextClick = () => {\n    const actQuote = data.find((q) => q.quote === quote.quote);\n\n    if (data.indexOf(actQuote) === data.length - 1) {\n      setQuote(data[0]);\n      return;\n    }\n    setQuote(data[data.indexOf(actQuote) + 1]);\n  };\n\n  if (isLoading) {\n    return <h1>Quotes loading...</h1>;\n  }\n\n  if (isError) {\n    return <p>{error.message}</p>;\n  }\n\n  if (isSuccess) {\n    return (\n      <main>\n        <h1>SuperQuotes Page</h1>\n        {quote && (\n          <QuoteContainer\n            author={quote.author}\n            quote={quote.quote}\n            onButtonClick={{\n              onButtonRefreshClick,\n              onButtonPrevClick,\n              onButtonNextClick,\n            }}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools initialOpen={false} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}